{"version":3,"sources":["./src/app/repository.ts","./src/app/repository-form/repository-form.component.ts","./src/app/repository-form/repository-form.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/user-form/user-form.component.ts","./src/app/user-form/user-form.component.html","./src/app/user.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/repository/repository.component.ts","./src/app/repository/repository.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class Repository {\n  name!:string;\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Repository } from '../repository';\n\n@Component({\n  selector: 'app-repository-form',\n  templateUrl: './repository-form.component.html',\n  styleUrls: ['./repository-form.component.css']\n})\nexport class RepositoryFormComponent implements OnInit {\n\n  newRepository= new Repository()\n  @Output() addRepository=new EventEmitter<Repository>()\n\n  submitRepository(){\nthis.addRepository.emit(this.newRepository)\n  }\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <h2 class=\"text-center\">Search for a Github Repository</h2>\n  <p>Use this page to search for a github repository.</p>\n  <hr />\n  <form (ngSubmit)=\"(newRepository)\" #repositoryForm=\"ngForm\">\n    <label for=\"name\">Github Repository</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"name\"\n      [(ngModel)]=\"newRepository\"\n      name=\"name\"\n      #name=\"ngModel\"\n      required\n    />\n    <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n      <p>Repository name is required</p>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Search for Repository</button>\n  </form>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {User}from '../user';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  users!: User[]\n\n  addNewUser(user:any){\n    this.users.push(user)\n  }\n\n  constructor() { }\n\n  \nngOnInit(): void {\n  }\n\n}\n","<app-user-form (addUser)=\"addNewUser($event)\"></app-user-form>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {User } from '../user';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n\n  newUser= new User()\n  @Output() addUser=new EventEmitter<User>()\n\n  submitUser(){\nthis.addUser.emit(this.newUser)\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <h2 class=\"text-center\">Search for a Github User</h2>\n  <p>Use this page to search for a github user.</p>\n  <hr />\n  <form (ngSubmit)=\"(newUser)\" #usernameForm=\"ngForm\">\n    <label for=\"name\">Github Username</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"name\"\n      [(ngModel)]=\"newUser\"\n      name=\"name\"\n      #name=\"ngModel\"\n      required\n    />\n    <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n      <p>Username is required</p>\n    </div>\n    <button type=\"submit\" class=\"btn btn-success\">Search for User</button>\n  </form>\n</div>\n","export class User {\n  name!:string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\n  <h1 class=\"display-4 text-center\">About Goals App</h1>\n  <hr class=\"my-4\" />\n  <p class=\"lead text-center\">\n    An Angular website where users may enter a GitHub username into a form,\n    submit it, and see names and descriptions of that person's public\n    repositories. A person can also look for repositories!\n  </p>\n  <p class=\"lead text-center\">\n    To search for a user, use the user tab and to search for a repository, use\n    the repository tab.\n  </p>\n</div>\n","export const environment = {\n  production: false,\n  apiUrl:\"https://api.github.com/users/daneden?access_token=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\"\n};","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {Repository} from '../repository';\n\n@Component({\n  selector: 'app-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.css']\n})\nexport class RepositoryComponent implements OnInit {\n\n  repositories!: Repository[]\n\n  addNewRepository(repository:any){\n    this.repositories.push(repository)\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-repository-form\n  (addRepository)=\"addNewRepository($event)\"\n></app-repository-form>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Github-Search';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AboutComponent } from './about/about.component';\nimport { UserComponent } from './user/user.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { RepositoryComponent } from './repository/repository.component';\nimport { RepositoryFormComponent } from './repository-form/repository-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    AboutComponent,\n    UserComponent,\n    UserFormComponent,\n    RepositoryComponent,\n    RepositoryFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink=\"/about\"><b>GITHUB-SEARCH</b></a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarNavAltMarkup\"\n    aria-controls=\"navbarNavAltMarkup\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div class=\"navbar-nav\">\n      <a\n        class=\"nav-item nav-link active\"\n        routerLink=\"about\"\n        routerLinkActive=\"active\"\n        >About<span class=\"sr-only\">(current)</span></a\n      >\n      <a class=\"nav-item nav-link\" routerLink=\"/user\" routerLinkActive=\"active\"\n        >User</a\n      >\n      <a\n        class=\"nav-item nav-link\"\n        routerLink=\"/repository\"\n        routerLinkActive=\"active\"\n        >Repository</a\n      >\n    </div>\n  </div>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutComponent} from './about/about.component';\nimport {UserComponent} from './user/user.component';\nimport {RepositoryComponent} from './repository/repository.component';\n\nconst routes: Routes = [\n  {path:'about', component: AboutComponent},\n  {path:'user', component: UserComponent},\n  {path:'repository', component: RepositoryComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}